---
title: "commons_analysis"
author: "Chloe Denhart"
format: html
editor: visual
---

## Human Study Analysis

This document provides an analysis of data conducted from students and online workers. The participants were tasked with maintaining a general "natural" resource (tokens) across 20 repeated rounds.

Here we are loading in the data set and filtering across only the maintenance treatment. Meaning the participant were tasked with not letting the natural resource deplete, a typical tragedy of commons simulation.

```{r}
# load tidyverse
library(tidyverse)
library(haven)

# tells R to skip the first two rows of dataset and start on the third one
tofc <- read_dta("GKQ_Dataset.dta")
head(tofc)
# filtering for only the maintenance treatment
tofc_maint <- tofc |>
  filter(cpp == 0, experiment %in% c(2, 3))
head(tofc_maint)
```

In this next section we will identify what percent of the participants cooperated across rounds versus defected. It will allow for us to understand if the subjects were considerate of other people and the resource as a whole or if they were selfish.

```{r}
# Compute mean withdrawal per participant
tofc_maint_summary <- tofc_maint |>
  group_by(id, strangers) |>
  summarise(mean_withdrawal = mean(c), .groups = "drop")

head(tofc_maint_summary)

```

| Variable    | Value | Meaning                                       |
|-------------|-------|-----------------------------------------------|
| `strangers` | `1`   | Groups **reshuffled** every round (Strangers) |
| `strangers` | `0`   | Groups stayed **fixed** for all 20 rounds     |

Table explains what the binary variable for strangers means. 1 means that every round groups were reshuffled therefore they were always with strangers. 0 means that the groups stayed fixed for all 20 rounds.

Do participants claim more tokens when they are in a group with people they know or strangers? This chunk of code will help us compare the withdraws. Like comparing cooperation rate in Prisoners Dilemma simulation.

```{r}
# Summary stats directly from round-level data
tofc_maint |>
  group_by(strangers) |>
  summarise(
    mean_withdrawal = mean(c, na.rm = TRUE),
    sd_withdrawal = sd(c, na.rm = TRUE),
    n = n_distinct(id)
  )

```

304 participants in fixed group and 128 participants in shuffled. Participants in strangers = 1, meaning they were reshuffled each round (more like a one-shot game) withdrew and average of 1.74 tokens per round, whereas participants in mixed groups, meaning they were in shuffled groups withdrew only. The standard deviation is \~4.41, deviating from the \~1.74 amount. For the participants in fixed groups, same groups across 20 rounds (strangers = 0), the mean withdrawal per round was \~6.787 and the standard deviation was \~7.6

We will run a t-test to ensure our results are statistically significant. The t-test compares the means of the two groups and tests.

-   **H₀ (Null):** The true mean withdrawal is the same for strangers and partners

-   **H₁ (Alternative):** The true mean withdrawal differs between the two

Equivalent to t-test ran in PD simulation.

```{r}
# T-test comparing average withdrawals between strangers and partners
t.test(c ~ strangers, data = tofc_maint)
```

Our t-statistic is quite large at 37.279, meaning that our results are far from what we may expect by chance. Since our p-value is \< 0.0001, our result is statistically significant. We’re 95% confident the true mean difference lies between 4.78 and 5.31 tokens per round. Because this interval does NOT include 0, the difference is significant.

Now, we are running a linear regression on the participant level to identify the effect of the group type, which in this case is strangers.

```{r}
# Linear regression predicting withdrawals based on group type
model1 <- lm(c ~ strangers, data = tofc_maint)
summary(model1)
```

The results of the linear regression show us strangers drew 5.044 fewer tokens per round than partners and that is statistically significant because p\<0.001.

Since we have all 20 rounds of data, we can check if the token withdraws differ across rounds. Is this trend different for strangers and partners?

```{r}
library(lme4)

# Mixed-effects model: withdrawal ~ group type * round
model2 <- lmer(c ~ period * strangers + (1 | id), data = tofc_maint)
summary(model2)
# c = number of tokens per round
# strangers, 1 if reshuffled, 0 if fixed group
# period = round number
# period:strangers = interaction betwen both, does time trend differ for strangers?
# Random effects: (1 | id) = each participant has their own baseline withdrawal level.
```

Our interpretation... intercept (6.393), in round one, participants in fixed groups (partners) withdrew \~6.39 tokens on average. Period, on average, for the fixed groups, withdrawal increased very slightly at \~0.01 tokens per round. Strangers, in round 1, participants withdrew \~3.45 less tokens than the fixed group. Period:strangers, as the rounds went on, they decreased their withdrawal by \~0.096 tokens, a higher rate than the partners group.

Randomness effect... id (intercept) our variance is 29.54 and our standard deviation is 5.435, showing us there is xubstantial variability in baseline withdrawal between participants. The residual variance is 12.78 and standard deviation is 3.575 meaning there is additional variability within participants across rounds. This means individuals differ quite a lot in their baseline withdrawal tendencies.

To help understand this better we will create a visual of average withdrawals per round.

```{r}
library(ggplot2)
library(tidyverse)
tofc_maint |>
  group_by(period, strangers) |>
  summarise(mean_withdrawal = mean(c), .groups = "drop") |>
  ggplot(aes(x = period, y = mean_withdrawal, color = factor(strangers))) +
  geom_line(size = 1.2) +
  labs(title = "Average Withdrawal by Round and Group Type",
       x = "Round", y = "Tokens Withdrawn", color = "Strangers (1 = Yes)") +
  theme_minimal()

```

This graph clearly shows us that participants in the strangers group (0), meaning that groups stay fixed for all 20 rounds started at a high baseline of token withdrawal and very slightly decreased per round until they got to the last few rounds they increased again. For stranger group (1), meaning participants were shuffled each round, they start at a much lower baseline for token withdrawal and they more rapidly decrease across rounds until they sort of plateau at round.

## LLM Data Analysis

The LLM data analysis was conducted in Python with four LLMs completing this simulation across twenty rounds with the goal of not depleting their resource, which in this case was one hundred tokens. You can check out the code in this GitHub Repo. For this simulation I made a strangers prompt, and a partners prompt. For the strangers prompt the LLMs were told they are competing againts different participants each round. For the partners prompt they were told they are participating against they same people the entire time.

The four LLMs were run on several characteristics and temperatures to adjust for how sensitive they are to these instructions. I characterized them as smart, progressive, aggressive and conservative. I collected seperate data based on occupations such as retail worker, office employee, student and heathcare worker.

```{r}
# Load necessary libraries
library(tidyverse)
library(lme4)
library(ggplot2)

# Load the LLM dataset
llm_data <- read_csv("TofC Dataset.csv")

```

```{r}
# fixing data error 

llm_data <- llm_data |>
  mutate(char = str_replace(char, "conserative", "conservative"))
```

Converting dataset so each row is one round per participant.

```{r}
library(tidyverse)

llm_long <- llm_data |>
  pivot_longer(
    cols = starts_with("cc"),
    names_to = "round",
    values_to = "withdrawal"
  ) |>
  mutate(
    round = as.integer(str_remove(round, "cc")),
    group_type = if_else(experiment == 2, "strangers", "partners")
  )
```

Now we will analyze the mean withdrawal by group type.

```{r}
llm_long |>
  group_by(group_type) |>
  summarise(
    mean_withdrawal = mean(withdrawal, na.rm = TRUE),
    sd_withdrawal = sd(withdrawal, na.rm = TRUE),
    participants = n_distinct(subject_id)
  )
```

From this output, we see an opposite response from what we saw from the human case. The LLMs that believed they were working with strangers for all 20 rounds had a higher average of mean withdrawal. Logically, this makes sense, if you know that you are not going to see people again, you have a higher probability to screw them over? Nevertheless, mean withdrawal was only about 0.7 tokens more per round. Another aspect to note is that the mean withdrawals per round are significantly higher compared to humans. This brings us right to the main question, can LLMs exhibit human emotions and empathy. This data may show us otherwise because the LLMs were selfish in taking more tokens and allowing for the resource to deplete early on.

```{r}
llm_data |>
  summarise(depletion_rate = mean(dep, na.rm = TRUE))
```

The average round that the tokens were depleted at was 4.8. A very low number

```{r}
llm_data |>
  group_by(experiment) |>
  summarise(depletion_rate = mean(dep, na.rm = TRUE))
```

The depletion rate for partners (3) was higher than the depletion rate for the strangers group. The LLMs that were told they are in groups with partners managed to hold onto their tokens for longer.

```{r}
llm_long |>
  group_by(temp) |>
  summarise(
    mean_withdrawal = mean(withdrawal, na.rm = TRUE),
    sd_withdrawal = sd(withdrawal, na.rm = TRUE),
    participants = n_distinct(subject_id)
  )
```

The temperatures represent how sensitive the LLMs are. Here we see that a higher temperature gives a larger mean withdrawal which follows this logic.

```{r}
library(lme4)

model_temp <- lmer(withdrawal ~ round * experiment * temp + (1 | subject_id), data = llm_long)
summary(model_temp)
```

Here we are predicting withdrawal amounts based on round, experiment and LLM temperature. Withdrawals decrease by \~0.53 per round. Partners withdraw less than strangers by \~0.76 tokens. Higher temp LLMs tend to withdraw more, but large error bar therefore this statistic is not significant. In the partner condition the decline over rounds is slower. Temperature does not meaningfully interact with time. There is a slight decrease in withdrawals for partners at high temp but this statistic is not significant.

With all this said, LLMs reduce their withdrawals over rounds regardless of group type or temperatire. There is no strong evidence that group structure (strangers vs partners) affects overall withdrawals. There is also no strong evidence that temperature changes how LLMs adapt over time. There is large individual variation.

```{r}
llm_long |>
  group_by(round, temp) |>
  summarise(mean_withdrawal = mean(withdrawal, na.rm = TRUE), .groups = "drop") |>
  ggplot(aes(x = round, y = mean_withdrawal, color = factor(temp))) +
  geom_line(size = 1.2) +
  labs(title = "Withdrawal by Round and Temperature",
       x = "Round", y = "Tokens Withdrawn", color = "Temperature") +
  theme_minimal()

```

We see a similar trajectory across LLM temperatures.

```{r}

library(ggplot2)
library(RColorBrewer)

llm_long |>
  group_by(char, round) |>
  summarise(mean_withdrawal = mean(withdrawal, na.rm = TRUE), .groups = "drop") |>
  ggplot(aes(x = round, y = mean_withdrawal, color = char)) +
  geom_line(size = 1) +  # thinner lines
  scale_color_brewer(palette = "Paired") +  # cleaner color set
  labs(
    title = "LLM Withdrawal by Round and Character",
    x = "Round", y = "Average Withdrawal", color = "Character"
  ) +
  theme_minimal(base_size = 13) +
  theme(
    legend.position = "right",
    legend.key.size = unit(0.5, "cm"),
    legend.text = element_text(size = 10),
    plot.title = element_text(face = "bold"),
    panel.grid.minor = element_blank()
  ) +
  scale_x_continuous(breaks = seq(1, max(llm_long$round), by = 2))  # reduce x-axis labels

```

There is no significant outliers for the characteristics again showing us that LLMs do not have the capabilities to perform like human beings yet. The aggressive LLM which we would expect to take the most tokens lies dead in the middle of all of the other characteristics.
